package main

import "bytes"

const (
	iamUserTemplate = `
resource "aws_iam_user" "{{ .Name }}" {
  name = "{{ .Name }}"

  tags = {
    company-user = "{{ .Name }}"
		ManagedBy = "Terraless AWS Organisation Roles"
  }
}
`

	iamUserGroupTemplate = `
resource "aws_iam_user_group_membership" "user-group-{{ .Name }}" {
  user = aws_iam_user.{{ .Name }}.name
  groups = [
    {{ range $key, $val := .Groups }}aws_iam_group.group-{{ $val }}.name,
    {{ end -}}
  ]
}
`
)

func generateMainAccountUsers(config *OrganisationRolesConfig) bytes.Buffer {
	buffer := bytes.Buffer{}

	buffer.WriteString("# Generated by Terraless Organisation Roles - generateMainAccountUsers")

	for userName, userData := range config.Users {
		var data = map[string]interface{} {
			"Name": userName,
			"Groups": userData.Groups,
		}
		buffer = renderToBuffer(data, iamUserTemplate, "iam-user", buffer)
		buffer = renderToBuffer(data, iamUserGroupTemplate, "iam-user-group", buffer)
	}

	return buffer
}
